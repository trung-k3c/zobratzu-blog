// app/layout.tsx
import "./globals.css";
import type { Metadata } from "next";
import { ReactNode } from "react";
import { EB_Garamond } from "next/font/google";

const garamond = EB_Garamond({
  subsets: ["latin"],
  weight: ["400", "700"],
  variable: "--font-garamond",
});

export const metadata:Metadata = {
  title: "ZobraTzu",
  description: "A journal of becoming and returning ðŸŒ¿",
};

export default function RootLayout({ children }: { children: ReactNode }) {
  return (
    <html lang="en" className={garamond.variable}>
      <body className="bg-neutral-50 text-gray-800 font-serif min-h-screen flex flex-col">
        <header className="px-6 py-4 border-b border-gray-200">
          <nav className="flex justify-between items-center max-w-4xl mx-auto">
            <a href="/" className="text-2xl font-bold tracking-tight">
              ZobraTzu ðŸŒ¿
            </a>
            <div className="space-x-4 text-sm">
              <a href="/" className="hover:underline">Home</a>
              <a href="/about" className="hover:underline">About</a>
              <a href="/blog" className="hover:underline">Blog</a>
            </div>
          </nav>
        </header>
        <main className="flex-1 max-w-2xl mx-auto w-full px-4 sm:px-6 py-12">
          {children}
        </main>

        <footer className="text-center text-xs text-gray-400 pb-6">
          Â© {new Date().getFullYear()} ZobraTzu. All rights reserved.
        </footer>
      </body>
    </html>
  );
}


/* import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        {children}
      </body>
    </html>
  );
} */
